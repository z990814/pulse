{"ast":null,"code":"import roleApi from \"@/api/role\";\nimport menuApi from \"@/api/menu\";\nexport default {\n  data() {\n    return {\n      dialogVisible: false,\n      dialogVisibleUpdate: false,\n      dialogVisiblePer: false,\n      roleForm: {},\n      updateForm: {\n        id: ''\n      },\n      formLabelWidth: '87px',\n      tableData: [],\n      currentPage4: 6,\n      pageSize: 100,\n      total: 100,\n      formQuery: {},\n      val: 10,\n      data: [],\n      dataSelected: [],\n      defaultProps: {\n        children: 'children',\n        label: 'label'\n      },\n      selectRole: 0\n    };\n  },\n  created() {\n    this.getform(1, 10);\n  },\n  methods: {\n    addRole() {\n      roleApi.addRole(this.roleForm).then(res => {\n        if (res.data.code === 200) {\n          this.dialogVisible = false;\n          this.$message({\n            message: '添加成功',\n            type: 'success'\n          });\n          this.getform(1, this.val);\n        }\n      });\n    },\n    updateRole() {\n      roleApi.updateRole(this.updateForm).then(res => {\n        if (res.data.code === 200) {\n          this.dialogVisibleUpdate = false;\n          this.$message({\n            message: '修改成功',\n            type: 'success'\n          });\n          this.getform(1, this.val);\n        }\n      });\n    },\n    getform(current, limit) {\n      roleApi.getFormDataListPage(current, limit, this.formQuery).then(res => {\n        if (res.data.code === 200) {\n          // console.log(res.data.data)\n          this.tableData = res.data.data.rows;\n          this.total = res.data.data.total;\n        }\n      });\n    },\n    openDialog() {\n      this.dialogVisible = true;\n      this.roleForm = {};\n    },\n    handleEdit(index, row) {\n      this.dialogVisibleUpdate = true;\n      this.updateForm = JSON.parse(JSON.stringify(row));\n    },\n    handleDelete(index, row) {\n      console.log(index, row);\n    },\n    handleSizeChange(val) {\n      this.getform(1, val);\n      this.val = val;\n    },\n    handleCurrentChange(val) {\n      this.getform(val, this.val);\n    },\n    handlePer(index, row) {\n      this.dialogVisiblePer = true;\n      this.selectRole = row.id;\n      this.getMenuListSelect();\n    },\n    getMenuList() {\n      menuApi.findNodes().then(res => {\n        this.data = res.data.data.list;\n      });\n    },\n    getMenuListSelect() {\n      menuApi.toAssign(this.selectRole).then(res => {\n        // console.log(res.data.data.list)\n        this.data = res.data.data.list.menuList;\n        this.dataSelected = res.data.data.list.selectedList;\n      });\n    },\n    getCheckedNodes() {\n      // console.log(this.$refs.tree.getCheckedNodes());\n      const assginMenuVo = {\n        menuIdList: this.$refs.tree.getCheckedKeys(),\n        roleId: this.selectRole\n      };\n      menuApi.AddMenuList(assginMenuVo).then(res => {\n        if (res.status === 200) {\n          this.dialogVisiblePer = false;\n          this.$message({\n            message: '添加成功',\n            type: 'success'\n          });\n        }\n      });\n    },\n    resetChecked() {\n      this.$refs.tree.setCheckedKeys([]);\n    }\n  }\n};","map":{"version":3,"names":["roleApi","menuApi","data","dialogVisible","dialogVisibleUpdate","dialogVisiblePer","roleForm","updateForm","id","formLabelWidth","tableData","currentPage4","pageSize","total","formQuery","val","dataSelected","defaultProps","children","label","selectRole","created","getform","methods","addRole","then","res","code","$message","message","type","updateRole","current","limit","getFormDataListPage","rows","openDialog","handleEdit","index","row","JSON","parse","stringify","handleDelete","console","log","handleSizeChange","handleCurrentChange","handlePer","getMenuListSelect","getMenuList","findNodes","list","toAssign","menuList","selectedList","getCheckedNodes","assginMenuVo","menuIdList","$refs","tree","getCheckedKeys","roleId","AddMenuList","status","resetChecked","setCheckedKeys"],"sources":["src/view/user/Role.vue"],"sourcesContent":["<template>\n  <div class=\"body\">\n    <div class=\"head\">\n      <button class=\"button\" @click=\"openDialog\">\n        <span><i class=\"el-icon-plus\"></i>添加</span>\n      </button>\n    </div>\n    <el-divider></el-divider>\n    <el-table :data=\"tableData\" border style=\"width: 100%\">\n      <el-table-column label=\"角色名\" width=\"180\">\n        <template slot-scope=\"scope\">\n            <div slot=\"reference\" class=\"name-wrapper\">\n              <el-tag size=\"medium\">{{ scope.row.roleName }}</el-tag>\n            </div>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"角色值\" width=\"180\">\n        <template slot-scope=\"scope\">\n            <div slot=\"reference\" class=\"name-wrapper\">\n              <el-tag size=\"medium\">{{ scope.row.roleCode }}</el-tag>\n            </div>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"描述\" width=\"217\">\n        <template slot-scope=\"scope\">\n            <div slot=\"reference\" class=\"name-wrapper\">\n              <el-tag size=\"medium\">{{ scope.row.description }}</el-tag>\n            </div>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"状态\" width=\"210\">\n        <template slot-scope=\"scope\">   \n            <div slot=\"reference\" class=\"name-wrapper\">\n              <el-tag size=\"medium\">{{ scope.row.grade=='0' ? '禁用' : '正常'}}</el-tag>\n            </div>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"创建日期\" width=\"247\">\n        <template slot-scope=\"scope\">\n          <i class=\"el-icon-time\"></i>\n          <span style=\"margin-left: 10px\">{{ scope.row.createTime }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"操作\">\n        <template slot-scope=\"scope\">\n          <el-button class=\"el-button--goon\" size=\"mini\" @click=\"handlePer(scope.$index, scope.row)\">分配权限</el-button>\n          <el-button class=\"el-button--goon\" size=\"mini\" @click=\"handleEdit(scope.$index, scope.row)\">编辑</el-button>\n          <!-- <el-button class=\"el-button--goon\" size=\"mini\" type=\"danger\" @click=\"handleDelete(scope.$index, scope.row)\">删除</el-button> -->\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <div class=\"block\">\n      <el-pagination @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\" :current-page=\"currentPage4\" :page-sizes=\"[10, 5, 15, 20, 25, 30]\"\n        :page-size=\"pageSize\"\n        layout=\"total, sizes, prev, pager, next, jumper\"\n        :total=\"total\">\n      </el-pagination>\n    </div>\n\n    <!-- <el-dialog title=\"添加用户\" :visible.sync=\"dialogVisible\" width=\"30%\" \n    :before-close=\"handleClose\"\n    > -->\n    <el-dialog title=\"添加角色\" :close-on-click-modal=\"false\" :visible.sync=\"dialogVisible\" width=\"30%\" style=\"color:aquamarine;\">\n      <el-form :model=\"roleForm\">\n        <el-form-item label=\"角色名\" :label-width=\"formLabelWidth\">\n          <div class=\"inputGroup\">\n            <input v-model=\"roleForm.roleName\" type=\"text\" required=\"\" autocomplete=\"off\">\n          </div>\n        </el-form-item>\n        <el-form-item label=\"角色码\" :label-width=\"formLabelWidth\">\n          <div class=\"inputGroup\">\n            <input v-model=\"roleForm.roleCode\" type=\"text\" required=\"\" autocomplete=\"off\">\n          </div>\n        </el-form-item>\n        <el-form-item label=\"描述\" :label-width=\"formLabelWidth\">\n          <div class=\"inputGroup\">\n            <input v-model=\"roleForm.description\" type=\"text\" required=\"\" autocomplete=\"off\">\n          </div>\n        </el-form-item>\n        <!-- <el-form-item label=\"权限组\" :label-width=\"formLabelWidth\">\n          <el-button class=\"el-button--goon\" style=\"margin-top: 7px;\">添加权限</el-button>\n        </el-form-item> -->\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button class=\"el-button--goon\" @click=\"dialogVisible = false\">取 消</el-button>\n        <el-button class=\"el-button--goon\" type=\"primary\" @click=\"addRole()\">确 定</el-button>\n      </span>\n    </el-dialog>\n\n    <el-dialog title=\"修改角色\" :close-on-click-modal=\"false\" :visible.sync=\"dialogVisibleUpdate\" width=\"30%\" style=\"color:aquamarine;\">\n      <el-form :model=\"updateForm\">\n        <el-form-item label=\"角色名\" :label-width=\"formLabelWidth\">\n          <div class=\"inputGroup\">\n            <input v-model=\"updateForm.roleName\" type=\"text\" required=\"\" autocomplete=\"off\">\n          </div>\n        </el-form-item>\n        <el-form-item label=\"角色码\" :label-width=\"formLabelWidth\">\n          <div class=\"inputGroup\">\n            <input v-model=\"updateForm.roleCode\" type=\"text\" required=\"\" autocomplete=\"off\">\n          </div>\n        </el-form-item>\n        <el-form-item label=\"描述\" :label-width=\"formLabelWidth\">\n          <div class=\"inputGroup\">\n            <input v-model=\"updateForm.description\" type=\"text\" required=\"\" autocomplete=\"off\">\n          </div>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button class=\"el-button--goon\" @click=\"dialogVisibleUpdate = false\">取 消</el-button>\n        <el-button class=\"el-button--goon\" type=\"primary\" @click=\"updateRole()\">确 定</el-button>\n      </span>\n    </el-dialog>\n\n    <el-dialog title=\"分配权限\" :close-on-click-modal=\"false\" :visible.sync=\"dialogVisiblePer\" width=\"30%\" style=\"color:aquamarine;\">\n      <el-tree :data=\"data\" show-checkbox default-expand-all node-key=\"id\" :default-checked-keys=\"dataSelected\" ref=\"tree\" highlight-current :props=\"defaultProps\">\n      </el-tree>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button class=\"el-button--goon\" @click=\"resetChecked\">清空</el-button>\n        <el-button class=\"el-button--goon\" @click=\"dialogVisiblePer = false\">取 消</el-button>\n        <el-button class=\"el-button--goon\" type=\"primary\" @click=\"getCheckedNodes\">确 定</el-button>\n      </span>\n    </el-dialog>\n\n    \n  </div>\n</template>\n\n<script>\nimport roleApi from \"@/api/role\"\nimport menuApi from \"@/api/menu\"\n\n  export default {\n    data() {\n      return {\n        dialogVisible: false,\n        dialogVisibleUpdate: false,\n        dialogVisiblePer: false,\n        roleForm: {},\n        updateForm: {\n          id: ''\n        },\n        formLabelWidth: '87px',\n        tableData: [],\n        currentPage4: 6,\n        pageSize: 100,\n        total: 100,\n        formQuery: {},\n        val: 10,\n        data: [],\n        dataSelected:[],\n        defaultProps: {\n          children: 'children',\n          label: 'label'\n        },\n        selectRole: 0\n      }\n    },\n    created() {\n      this.getform(1,10)\n    },\n    methods: {\n      addRole() {\n        roleApi.addRole(this.roleForm).then(res => {\n          if(res.data.code === 200) {\n            this.dialogVisible = false\n            this.$message({\n              message: '添加成功',\n              type: 'success'\n            })\n            this.getform(1,this.val)\n          }\n        })\n      },\n      updateRole() {\n        roleApi.updateRole(this.updateForm).then(res => {\n          if(res.data.code === 200) {\n            this.dialogVisibleUpdate = false\n            this.$message({\n              message: '修改成功',\n              type: 'success'\n            })\n            this.getform(1,this.val)\n          }\n        })\n      },\n      getform(current, limit) {\n        roleApi.getFormDataListPage(current, limit, this.formQuery).then(res => {\n          if(res.data.code === 200){\n            // console.log(res.data.data)\n            this.tableData = res.data.data.rows\n            this.total = res.data.data.total\n          }\n        })\n      },\n      openDialog() {\n        this.dialogVisible = true\n        this.roleForm = {}\n      },\n      handleEdit(index, row) {\n        this.dialogVisibleUpdate = true\n        this.updateForm = JSON.parse(JSON.stringify(row))\n      },\n      handleDelete(index, row) {\n        console.log(index, row);\n      },\n      handleSizeChange(val) {\n        this.getform(1,val)\n        this.val = val\n      },\n      handleCurrentChange(val) {\n        this.getform(val,this.val)\n      },\n      handlePer(index, row) {\n        this.dialogVisiblePer = true\n        this.selectRole = row.id\n        this.getMenuListSelect()\n      },\n      getMenuList() {\n        menuApi.findNodes().then(res => {\n          this.data = res.data.data.list\n        })\n      },\n      getMenuListSelect() {\n        menuApi.toAssign(this.selectRole).then(res => {\n          // console.log(res.data.data.list)\n          this.data = res.data.data.list.menuList\n          this.dataSelected = res.data.data.list.selectedList\n        })\n      },\n      getCheckedNodes() {\n        // console.log(this.$refs.tree.getCheckedNodes());\n        const assginMenuVo = {\n          menuIdList: this.$refs.tree.getCheckedKeys(),\n          roleId:  this.selectRole\n        }\n        menuApi.AddMenuList(assginMenuVo).then(res => {\n          if(res.status === 200 ) {\n            this.dialogVisiblePer = false\n            this.$message({\n              message: '添加成功',\n              type: 'success'\n            })\n          }\n        })\n      },\n      resetChecked() {\n        this.$refs.tree.setCheckedKeys([])\n      }\n    }\n  }\n</script>\n\n<style scoped>\n::v-deep .el-table th{\n    background-color: rgba(124, 182, 179, 0.342);\n}\n/* 按钮风格重定义 */\n.el-button--goon {\n  color: #ffffff;\n  background-color: #13c2c2;\n  border-color: #13c2c2;\n  height: 34px;\n  line-height: 34px;\n  padding: 0 20px;\n}\n.el-button--goon:focus, .el-button--goon:hover {\n  color: rgb(245, 245, 245);\n  background-color: #0e9a9a;\n  border-color: #0e9a9a;\n  height: 34px;\n  line-height: 34px;\n  padding: 0 20px;\n}\n.el-button--goon:active {\n  color:  #ffffff;\n  background-color: #13c2c2;\n  border-color: #13c2c2;\n  height: 34px;\n  line-height: 34px;\n  padding: 0 20px;\n}\n/* 按钮风格重定义 */\n\n.body {\n  margin: 7px;\n}\n\n.button {\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 5px;\n  background: lightseagreen;\n  font-family: \"Montserrat\", sans-serif;\n  box-shadow: 0px 6px 24px 0px rgba(0, 0, 0, 0.2);\n  overflow: hidden;\n  border: none;\n  cursor: pointer;\n  padding: 7px 27px;\n}\n\n.button:after {\n  content: \" \";\n  width: 0%;\n  height: 100%;\n  background: rgb(35, 175, 196);\n  position: absolute;\n  transition: all 0.4s ease-in-out;\n  right: 0;\n}\n\n.button:hover::after {\n  right: auto;\n  left: 0;\n  width: 100%;\n}\n\n.button span {\n  text-align: center;\n  text-decoration: none;\n  width: 100%;\n  /* padding: 11px 25px; */\n  color: #fff;\n  font-size: 1.125em;\n  font-weight: 700;\n  letter-spacing: 0.3em;\n  z-index: 20;\n  transition: all 0.3s ease-in-out;\n}\n\n.button:hover span {\n  color: #183153;\n  animation: scaleUp 0.3s ease-in-out;\n}\n\n@keyframes scaleUp {\n 0% {\n  transform: scale(1);\n }\n\n 50% {\n  transform: scale(0.95);\n }\n\n 100% {\n  transform: scale(1);\n }\n}\n\n.inputGroup {\n  font-family: 'Segoe UI', sans-serif;\n  margin: 0em 0 0em 0;\n  max-width: 297px;\n  position: relative;\n}\n\n.inputGroup input {\n  font-size: 100%;\n  padding: 0.8em;\n  outline: none;\n  border: 2px solid rgb(200, 200, 200);\n  background-color: transparent;\n  border-radius: 7px;\n  width: 100%;\n}\n\n.inputGroup :is(input:focus, input:valid)~label {\n  transform: translateY(-50%) scale(.9);\n  margin: 0em;\n  margin-left: 1.3em;\n  padding: 0.4em;\n  background-color: #e8e8e8;\n}\n\n.inputGroup :is(input:focus, input:valid) {\n  border-color: lightseagreen;\n}\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}