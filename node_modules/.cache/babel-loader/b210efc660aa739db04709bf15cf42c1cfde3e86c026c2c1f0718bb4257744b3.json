{"ast":null,"code":"import groupApi from '@/api/group';\nexport default {\n  data() {\n    return {\n      tableData: [],\n      innerHeight: window.innerHeight,\n      formQuery: {},\n      total: 0,\n      dialogVisible: false,\n      dialogVisibleUpdate: false,\n      dialogVisibleChoose: false,\n      dialogVisibleDelete: false,\n      deleteDes: '',\n      deleteId: 0,\n      formLabelWidth: '87px',\n      groupForm: {},\n      updateForm: {},\n      options: [{\n        value: 0,\n        label: '默认随机问题组'\n        // 卡组类型（0：默认随机问题组 1： 自由固定问题组 2：顺序算法问题组 3：一周周期算法问题组 4：月份周期算法问题组）\n      }, {\n        value: 1,\n        label: '自由固定问题组'\n      }, {\n        value: 2,\n        label: '顺序算法问题组'\n      }, {\n        value: 3,\n        label: '周顺序算法问题组'\n      }, {\n        value: 4,\n        label: '月顺序算法问题组'\n      }, {\n        value: 5,\n        label: '年顺序算法问题组'\n      }, {\n        value: 6,\n        label: '自定义算法问题组'\n      }]\n    };\n  },\n  created() {\n    this.getform(1, 10);\n  },\n  methods: {\n    toAddGroup() {\n      this.groupForm = {};\n      this.dialogVisible = true;\n    },\n    toUpdateGroup(index, row) {\n      this.updateForm = row;\n      this.dialogVisibleUpdate = true;\n    },\n    toChooseQuestions() {\n      this.dialogVisibleChoose = true;\n    },\n    getform(current, limit) {\n      groupApi.getFormDataListPage(current, limit, this.formQuery).then(res => {\n        if (res.data.code === 200) {\n          this.tableData = res.data.data.rows;\n          this.total = res.data.data.total;\n        }\n      });\n    },\n    addGroup() {\n      groupApi.addGroup(this.groupForm).then(res => {\n        if (res.data.code === 200) {\n          this.$message({\n            type: 'success',\n            message: '添加成功'\n          });\n          this.dialogVisible = false;\n          this.getform(1, 10);\n        }\n      });\n    },\n    updateGroup() {\n      groupApi.updateGroup(this.updateForm).then(res => {\n        if (res.data.code === 200) {\n          this.$message({\n            type: 'success',\n            message: '修改成功'\n          });\n          this.dialogVisibleUpdate = false;\n          this.getform(1, 10);\n        }\n      });\n    },\n    toDeleteGroup(index, row) {\n      this.dialogVisibleDelete = true;\n      this.deleteDes = row.groupTitle;\n      this.deleteId = row.id;\n    },\n    deleteGroup() {\n      groupApi.deleteGroup(this.deleteId).then(res => {\n        if (res.data.code === 200) {\n          this.$message({\n            type: 'success',\n            message: '删除成功'\n          });\n        }\n        this.getform(1, 10);\n        this.dialogVisibleDelete = false;\n      });\n    }\n  }\n};","map":{"version":3,"names":["groupApi","data","tableData","innerHeight","window","formQuery","total","dialogVisible","dialogVisibleUpdate","dialogVisibleChoose","dialogVisibleDelete","deleteDes","deleteId","formLabelWidth","groupForm","updateForm","options","value","label","created","getform","methods","toAddGroup","toUpdateGroup","index","row","toChooseQuestions","current","limit","getFormDataListPage","then","res","code","rows","addGroup","$message","type","message","updateGroup","toDeleteGroup","groupTitle","id","deleteGroup"],"sources":["src/view/pulse/Group.vue"],"sourcesContent":["<template>\n  <div class=\"body\">\n    <div class=\"head\">\n      <el-button class=\"el-button--goon\" @click=\"toAddGroup()\"><span><i class=\"el-icon-plus\"></i>添加</span></el-button>\n    </div>\n    <el-divider></el-divider>\n\n    <el-table :data=\"tableData\" border style=\"width: 100%\" :max-height=\"innerHeight*0.7\">\n    <el-table-column label=\"规则名称\" width=\"180\">\n        <template slot-scope=\"scope\">\n          <div slot=\"reference\" class=\"name-wrapper\">\n            <p style=\"font-weight: 700;font-size:17px;\">{{ scope.row.groupTitle }}</p>\n          </div>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"规则类型\" width=\"197\">\n        <template slot-scope=\"scope\">\n          <div slot=\"reference\" class=\"name-wrapper\">\n            <p v-if=\"scope.row.type === 0\" style=\"font-weight: 700;font-size:17px;\">默认随机问题组</p>\n            <p v-else-if=\"scope.row.type === 1\" style=\"font-weight: 700;font-size:17px;\">自由固定问题组</p>\n            <p v-else-if=\"scope.row.type === 2\" style=\"font-weight: 700;font-size:17px;\">顺序算法问题组</p>\n            <p v-else-if=\"scope.row.type === 3\" style=\"font-weight: 700;font-size:17px;\">周顺序算法问题组</p>\n            <p v-else-if=\"scope.row.type === 4\" style=\"font-weight: 700;font-size:17px;\">月顺序算法问题组</p>\n            <p v-else-if=\"scope.row.type === 5\" style=\"font-weight: 700;font-size:17px;\">年顺序算法问题组</p>\n            <p v-else-if=\"scope.row.type === 6\" style=\"font-weight: 700;font-size:17px;\">自定义算法问题组</p>\n          </div>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"描述\" width=\"474\">\n        <template slot-scope=\"scope\">\n          <div slot=\"reference\" class=\"name-wrapper\">\n            <p style=\"font-weight: 700;font-size:17px;\">{{ scope.row.description }}</p>\n          </div>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"创建时间\" width=\"217\">\n        <template slot-scope=\"scope\">\n          <i class=\"el-icon-time\"></i>\n          <span style=\"margin-left: 10px\">{{ scope.row.createTime }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"更新时间\" width=\"217\">\n        <template slot-scope=\"scope\">\n          <i class=\"el-icon-time\"></i>\n          <span style=\"margin-left: 10px\">{{ scope.row.updateTime }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"操作\">\n        <template slot-scope=\"scope\">\n          <el-button class=\"el-button--goon\" size=\"mini\" @click=\"toUpdateGroup(scope.$index, scope.row)\">编辑</el-button>\n          <el-button class=\"el-button--goon\" size=\"mini\" type=\"danger\" @click=\"toDeleteGroup(scope.$index, scope.row)\">删除</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <el-dialog title=\"添加规则\" :close-on-click-modal=\"false\" :visible.sync=\"dialogVisible\" width=\"30%\" style=\"color:aquamarine;\">\n      <el-form :model=\"groupForm\">\n        <el-form-item label=\"规则名称:\" :label-width=\"formLabelWidth\">\n          <div class=\"inputGroup\">\n            <input v-model=\"groupForm.groupTitle\" type=\"text\" required=\"\" autocomplete=\"off\">\n          </div>\n        </el-form-item>\n        <el-form-item label=\"规则类型:\" :label-width=\"formLabelWidth\">\n          <el-select v-model=\"groupForm.type\" placeholder=\"请选择\">\n            <el-option v-for=\"item in options\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\" />\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"题目数量:\" :label-width=\"formLabelWidth\">\n          <div class=\"inputGroup\">\n            <input v-model=\"groupForm.questionAmount\" type=\"number\" required=\"\" autocomplete=\"off\" placeholder=\"请输入整数\">\n          </div>\n          <el-button v-if=\"groupForm.type === 1 && groupForm.questionAmount > 0\" class=\"el-button--goon\" style=\"margin-top: 4px;\" @click=\"toChooseQuestions()\" > 选择题目</el-button>\n        </el-form-item>\n        <el-form-item label=\"描述:\" :label-width=\"formLabelWidth\">\n          <p v-if=\"groupForm.type === 0\" style=\"color:lightseagreen;font-size:19px;margin:0;font-weight:700\">对一个主题的所有问题进行随机抽取</p>\n          <div v-else-if=\"groupForm.type === 1\" class=\"inputGroup\">\n            <input v-model=\"groupForm.description\" type=\"text\" required=\"\" autocomplete=\"off\">\n          </div>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button class=\"el-button--goon\" @click=\"dialogVisible = false\">取 消</el-button>\n        <el-button class=\"el-button--goon\" type=\"primary\" @click=\"addGroup()\">确 定</el-button>\n      </span>\n    </el-dialog>\n\n    <el-dialog title=\"修改规则\" :close-on-click-modal=\"false\" :visible.sync=\"dialogVisibleUpdate\" width=\"30%\" style=\"color:aquamarine;\">\n      <el-form :model=\"updateForm\">\n        <el-form-item label=\"规则名称:\" :label-width=\"formLabelWidth\">\n          <div class=\"inputGroup\">\n            <input v-model=\"updateForm.groupTitle\" type=\"text\" required=\"\" autocomplete=\"off\">\n          </div>\n        </el-form-item>\n        <el-form-item label=\"规则类型:\" :label-width=\"formLabelWidth\">\n          <el-select v-model=\"updateForm.type\" placeholder=\"请选择\">\n            <el-option v-for=\"item in options\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\" />\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"题目数量:\" :label-width=\"formLabelWidth\">\n          <div class=\"inputGroup\">\n            <input v-model=\"updateForm.questionAmount\" type=\"number\" required=\"\" autocomplete=\"off\" placeholder=\"请输入整数\">\n          </div>\n          <el-button v-if=\"updateForm.type === 1 && updateForm.questionAmount > 0\" class=\"el-button--goon\" style=\"margin-top: 4px;\" @click=\"toChooseQuestions()\" > 选择题目</el-button>\n        </el-form-item>\n        <el-form-item label=\"描述:\" :label-width=\"formLabelWidth\">\n          <p v-if=\"updateForm.type === 0\" style=\"color:lightseagreen;font-size:19px;margin:0;font-weight:700\">对一个主题的所有问题进行随机抽取</p>\n          <div v-else-if=\"updateForm.type === 1\" class=\"inputGroup\">\n            <input v-model=\"updateForm.description\" type=\"text\" required=\"\" autocomplete=\"off\">\n          </div>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button class=\"el-button--goon\" @click=\"dialogVisibleUpdate = false\">取 消</el-button>\n        <el-button class=\"el-button--goon\" type=\"primary\" @click=\"updateGroup()\">确 定</el-button>\n      </span>\n    </el-dialog>\n\n    <el-dialog title=\"删除问题\" :close-on-click-modal=\"false\" :visible.sync=\"dialogVisibleDelete\" width=\"30%\" style=\"color:aquamarine;\">\n      <p>确定要删除问题：<br>《{{ deleteDes }}》吗？</p>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button class=\"el-button--goon\" @click=\"dialogVisibleDelete = false\">取 消</el-button>\n        <el-button class=\"el-button--goon\" type=\"primary\" @click=\"deleteGroup()\">确 定</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport groupApi from '@/api/group'\n  export default {\n    data() {\n      return {\n        tableData: [],\n        innerHeight: window.innerHeight,\n        formQuery: {},\n        total: 0,\n        dialogVisible: false,\n        dialogVisibleUpdate: false,\n        dialogVisibleChoose: false,\n        dialogVisibleDelete: false,\n        deleteDes: '',\n        deleteId: 0,\n        formLabelWidth: '87px',\n        groupForm: {},\n        updateForm: {},\n        options: [\n          {\n            value: 0,\n            label: '默认随机问题组'\n            // 卡组类型（0：默认随机问题组 1： 自由固定问题组 2：顺序算法问题组 3：一周周期算法问题组 4：月份周期算法问题组）\n          },\n          {\n            value: 1,\n            label: '自由固定问题组'\n          },\n          {\n            value: 2,\n            label: '顺序算法问题组'\n          },\n          {\n            value: 3,\n            label: '周顺序算法问题组'\n          },\n          {\n            value: 4,\n            label: '月顺序算法问题组'\n          },\n          {\n            value: 5,\n            label: '年顺序算法问题组'\n          },\n          {\n            value: 6,\n            label: '自定义算法问题组'\n          }\n        ]\n      }\n    },\n    created() {\n      this.getform(1,10)\n    },\n    methods: {\n      toAddGroup() {\n        this.groupForm = {}\n        this.dialogVisible = true\n      },\n      toUpdateGroup(index,row) {\n        this.updateForm = row\n        this.dialogVisibleUpdate = true\n      },\n      toChooseQuestions() {\n        this.dialogVisibleChoose = true\n      },\n      getform(current, limit) {\n        groupApi.getFormDataListPage(current, limit, this.formQuery).then(res => {\n          if(res.data.code === 200){\n            this.tableData = res.data.data.rows\n            this.total = res.data.data.total\n          }\n        })\n      },\n      addGroup() {\n        groupApi.addGroup(this.groupForm).then(res => {\n          if(res.data.code === 200) {\n            this.$message({\n              type: 'success',\n              message: '添加成功'\n            })\n            this.dialogVisible = false\n            this.getform(1,10)\n          }\n        })\n      },\n      updateGroup() {\n        groupApi.updateGroup(this.updateForm).then(res => {\n          if(res.data.code === 200) {\n            this.$message({\n              type: 'success',\n              message: '修改成功'\n            })\n            this.dialogVisibleUpdate = false\n            this.getform(1,10)\n          }\n        })\n      },\n      toDeleteGroup(index, row) {\n        this.dialogVisibleDelete = true\n        this.deleteDes = row.groupTitle\n        this.deleteId = row.id\n      },\n      deleteGroup() {\n        groupApi.deleteGroup(this.deleteId).then(res => {\n          if(res.data.code === 200) {\n            this.$message({\n              type: 'success',\n              message: '删除成功'\n            })\n          }\n          this.getform(1,10)\n          this.dialogVisibleDelete = false\n        })\n      }\n    }\n  }\n</script>\n\n<style scoped>\n.body {\n  margin: 7px;\n}\n\n\n  /* 按钮风格重定义 */\n.el-button--goon {\n  color: #ffffff;\n  background-color: #13c2c2;\n  border-color: #13c2c2;\n  height: 34px;\n  line-height: 34px;\n  padding: 0 20px;\n}\n.el-button--goon:focus, .el-button--goon:hover {\n  color: rgb(245, 245, 245);\n  background-color: #0e9a9a;\n  border-color: #0e9a9a;\n  height: 34px;\n  line-height: 34px;\n  padding: 0 20px;\n}\n.el-button--goon:active {\n  color:  #ffffff;\n  background-color: #13c2c2;\n  border-color: #13c2c2;\n  height: 34px;\n  line-height: 34px;\n  padding: 0 20px;\n}\n/* 按钮风格重定义 */\n\n.inputGroup {\n  font-family: 'Segoe UI', sans-serif;\n  margin: 0em 0 0em 0;\n  max-width: 297px;\n  position: relative;\n}\n\n.inputGroup input {\n  font-size: 100%;\n  padding: 0.8em;\n  outline: none;\n  border: 2px solid rgb(200, 200, 200);\n  background-color: transparent;\n  border-radius: 7px;\n  width: 100%;\n}\n\n.inputGroup :is(input:focus, input:valid)~label {\n  transform: translateY(-50%) scale(.9);\n  margin: 0em;\n  margin-left: 1.3em;\n  padding: 0.4em;\n  background-color: #e8e8e8;\n}\n\n.inputGroup :is(input:focus, input:valid) {\n  border-color: lightseagreen;\n}\n</style>"],"mappings":"AAgIA,OAAAA,QAAA;AACA;EACAC,KAAA;IACA;MACAC,SAAA;MACAC,WAAA,EAAAC,MAAA,CAAAD,WAAA;MACAE,SAAA;MACAC,KAAA;MACAC,aAAA;MACAC,mBAAA;MACAC,mBAAA;MACAC,mBAAA;MACAC,SAAA;MACAC,QAAA;MACAC,cAAA;MACAC,SAAA;MACAC,UAAA;MACAC,OAAA,GACA;QACAC,KAAA;QACAC,KAAA;QACA;MACA,GACA;QACAD,KAAA;QACAC,KAAA;MACA,GACA;QACAD,KAAA;QACAC,KAAA;MACA,GACA;QACAD,KAAA;QACAC,KAAA;MACA,GACA;QACAD,KAAA;QACAC,KAAA;MACA,GACA;QACAD,KAAA;QACAC,KAAA;MACA,GACA;QACAD,KAAA;QACAC,KAAA;MACA;IAEA;EACA;EACAC,QAAA;IACA,KAAAC,OAAA;EACA;EACAC,OAAA;IACAC,WAAA;MACA,KAAAR,SAAA;MACA,KAAAP,aAAA;IACA;IACAgB,cAAAC,KAAA,EAAAC,GAAA;MACA,KAAAV,UAAA,GAAAU,GAAA;MACA,KAAAjB,mBAAA;IACA;IACAkB,kBAAA;MACA,KAAAjB,mBAAA;IACA;IACAW,QAAAO,OAAA,EAAAC,KAAA;MACA5B,QAAA,CAAA6B,mBAAA,CAAAF,OAAA,EAAAC,KAAA,OAAAvB,SAAA,EAAAyB,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAA9B,IAAA,CAAA+B,IAAA;UACA,KAAA9B,SAAA,GAAA6B,GAAA,CAAA9B,IAAA,CAAAA,IAAA,CAAAgC,IAAA;UACA,KAAA3B,KAAA,GAAAyB,GAAA,CAAA9B,IAAA,CAAAA,IAAA,CAAAK,KAAA;QACA;MACA;IACA;IACA4B,SAAA;MACAlC,QAAA,CAAAkC,QAAA,MAAApB,SAAA,EAAAgB,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAA9B,IAAA,CAAA+B,IAAA;UACA,KAAAG,QAAA;YACAC,IAAA;YACAC,OAAA;UACA;UACA,KAAA9B,aAAA;UACA,KAAAa,OAAA;QACA;MACA;IACA;IACAkB,YAAA;MACAtC,QAAA,CAAAsC,WAAA,MAAAvB,UAAA,EAAAe,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAA9B,IAAA,CAAA+B,IAAA;UACA,KAAAG,QAAA;YACAC,IAAA;YACAC,OAAA;UACA;UACA,KAAA7B,mBAAA;UACA,KAAAY,OAAA;QACA;MACA;IACA;IACAmB,cAAAf,KAAA,EAAAC,GAAA;MACA,KAAAf,mBAAA;MACA,KAAAC,SAAA,GAAAc,GAAA,CAAAe,UAAA;MACA,KAAA5B,QAAA,GAAAa,GAAA,CAAAgB,EAAA;IACA;IACAC,YAAA;MACA1C,QAAA,CAAA0C,WAAA,MAAA9B,QAAA,EAAAkB,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAA9B,IAAA,CAAA+B,IAAA;UACA,KAAAG,QAAA;YACAC,IAAA;YACAC,OAAA;UACA;QACA;QACA,KAAAjB,OAAA;QACA,KAAAV,mBAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}