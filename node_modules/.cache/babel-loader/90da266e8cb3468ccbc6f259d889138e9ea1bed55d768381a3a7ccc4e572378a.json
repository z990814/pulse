{"ast":null,"code":"import quesApi from '@/api/questions';\nexport default {\n  data() {\n    return {\n      tableData: [],\n      innerHeight: window.innerHeight,\n      dialogVisible: false,\n      dialogVisibleUpdate: false,\n      dialogVisibleDelete: false,\n      formLabelWidth: '87px',\n      quesForm: {},\n      updateForm: {},\n      deleteDes: '',\n      deleteId: 0,\n      options: [{\n        value: 0,\n        label: '单选'\n      }, {\n        value: 1,\n        label: '多选'\n      }],\n      quesOptions: [{\n        sort: 1,\n        value: 1,\n        label: '完全同意'\n      }, {\n        sort: 2,\n        value: 2,\n        label: '同意'\n      }, {\n        sort: 3,\n        value: 3,\n        label: '基本同意'\n      }, {\n        sort: 4,\n        value: 4,\n        label: '不同意'\n      }, {\n        sort: 5,\n        value: 5,\n        label: '完全不同意'\n      }],\n      formQuery: {},\n      total: 0,\n      currentPage: 1,\n      pageSize: 10\n    };\n  },\n  created() {\n    this.getform(1, 10);\n  },\n  methods: {\n    toAddQuestion() {\n      this.dialogVisible = true;\n      this.quesForm = {};\n    },\n    toUpdateQuestion(index, row) {\n      this.dialogVisibleUpdate = true;\n      this.updateForm = row;\n    },\n    toDeleteQuestion(index, row) {\n      this.dialogVisibleDelete = true;\n      this.deleteDes = row.description;\n      this.deleteId = row.id;\n    },\n    deleteQuestion() {\n      quesApi.deleteQuestion(this.deleteId).then(res => {\n        if (res.data.code === 200) {\n          this.$message({\n            type: 'success',\n            message: '删除成功'\n          });\n        }\n        this.getform(1, 10);\n        this.dialogVisibleDelete = false;\n      });\n    },\n    addQuestion() {\n      this.quesForm.options = JSON.stringify(this.quesOptions);\n      // console.log(options)\n      quesApi.addQuestion(this.quesForm).then(res => {\n        if (res.data.code === 200) {\n          this.$message({\n            type: 'success',\n            message: '添加成功'\n          });\n        }\n        this.getform(1, 10);\n        this.dialogVisible = false;\n      });\n    },\n    updateQuestion() {\n      this.updateForm.options = JSON.stringify(this.quesOptions);\n      quesApi.updateQuestion(this.updateForm).then(res => {\n        if (res.data.code === 200) {\n          this.$message({\n            type: 'success',\n            message: '添加成功'\n          });\n        }\n        this.getform(1, 10);\n        this.dialogVisibleUpdate = false;\n      });\n    },\n    getform(current, limit) {\n      quesApi.getFormDataListPage(current, limit, this.formQuery).then(res => {\n        if (res.data.code === 200) {\n          this.tableData = res.data.data.rows;\n          this.total = res.data.data.total;\n        }\n      });\n    },\n    // 切换为xx条一页\n    handleSizeChange(val) {\n      this.getform(1, val);\n      this.pageSize = val;\n    },\n    // 去到xx页\n    handleCurrentChange(val) {\n      this.getform(val, this.pageSize);\n      this.currentPage = val;\n    }\n  }\n};","map":{"version":3,"names":["quesApi","data","tableData","innerHeight","window","dialogVisible","dialogVisibleUpdate","dialogVisibleDelete","formLabelWidth","quesForm","updateForm","deleteDes","deleteId","options","value","label","quesOptions","sort","formQuery","total","currentPage","pageSize","created","getform","methods","toAddQuestion","toUpdateQuestion","index","row","toDeleteQuestion","description","id","deleteQuestion","then","res","code","$message","type","message","addQuestion","JSON","stringify","updateQuestion","current","limit","getFormDataListPage","rows","handleSizeChange","val","handleCurrentChange"],"sources":["src/view/pulse/Questions.vue"],"sourcesContent":["<template>\n  <div class=\"body\">\n    <div class=\"head\">\n      <el-button class=\"el-button--goon\" @click=\"toAddQuestion()\"><span><i class=\"el-icon-plus\"></i>添加</span></el-button>\n    </div>\n    <el-divider></el-divider>\n    <el-table :data=\"tableData\" border style=\"width: 100%\" :max-height=\"innerHeight*0.7\">\n    <el-table-column label=\"主题\" width=\"180\">\n        <template slot-scope=\"scope\">\n          <div slot=\"reference\" class=\"name-wrapper\">\n            <p style=\"font-weight: 700;font-size:17px;\">{{ scope.row.theme }}</p>\n          </div>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"驱动因素\" width=\"147\">\n        <template slot-scope=\"scope\">\n          <div slot=\"reference\" class=\"name-wrapper\">\n              <p style=\"font-weight: 700;font-size:17px;\">{{ scope.row.themeModule }}</p>\n            </div>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"子因素\" width=\"124\">\n        <template slot-scope=\"scope\">\n          <div slot=\"reference\" class=\"name-wrapper\">\n            <p style=\"font-weight: 700;font-size:17px;\">{{ scope.row.tags }}</p>\n          </div>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"问题描述\" width=\"417\">\n        <template slot-scope=\"scope\">\n          <div slot=\"reference\" class=\"name-wrapper\">\n            <p style=\"font-weight: 700;font-size:17px;\">{{ scope.row.description }}</p>\n          </div>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"排序\" width=\"110\">\n        <template slot-scope=\"scope\">   \n          <div slot=\"reference\" class=\"name-wrapper\">\n              <p style=\"font-weight: 700;font-size:17px;\">{{ scope.row.sort }}</p>\n            </div>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"选项类型\" width=\"117\">\n        <template slot-scope=\"scope\">\n          <div slot=\"reference\" class=\"name-wrapper\">\n            <p style=\"font-weight: 700;font-size:17px;\">{{ scope.row.optionsType === 0 ? '单选' : '多选' }}</p>\n          </div>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"创建日期\" width=\"217\">\n        <template slot-scope=\"scope\">\n          <i class=\"el-icon-time\"></i>\n          <span style=\"margin-left: 10px\">{{ scope.row.createTime }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"操作\">\n        <template slot-scope=\"scope\">\n          <el-button class=\"el-button--goon\" size=\"mini\" @click=\"toUpdateQuestion(scope.$index, scope.row)\">编辑</el-button>\n          <el-button class=\"el-button--goon\" size=\"mini\" type=\"danger\" @click=\"toDeleteQuestion(scope.$index, scope.row)\">删除</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <el-dialog title=\"添加问题\" :close-on-click-modal=\"false\" :visible.sync=\"dialogVisible\" width=\"30%\" style=\"color:aquamarine;\">\n      <el-form :model=\"quesForm\">\n        <el-form-item label=\"主题\" :label-width=\"formLabelWidth\">\n          <div class=\"inputGroup\">\n            <input v-model=\"quesForm.theme\" type=\"text\" required=\"\" autocomplete=\"off\">\n          </div>\n        </el-form-item>\n        <el-form-item label=\"驱动因素\" :label-width=\"formLabelWidth\">\n          <div class=\"inputGroup\">\n            <input v-model=\"quesForm.themeModule\" type=\"text\" required=\"\" autocomplete=\"off\">\n          </div>\n        </el-form-item>\n        <el-form-item label=\"子因素\" :label-width=\"formLabelWidth\">\n          <div class=\"inputGroup\">\n            <input v-model=\"quesForm.tags\" type=\"text\" required=\"\" autocomplete=\"off\">\n          </div>\n        </el-form-item>\n        <el-form-item label=\"问题描述\" :label-width=\"formLabelWidth\">\n          <div class=\"inputGroup\">\n            <input v-model=\"quesForm.description\" type=\"text\" required=\"\" autocomplete=\"off\">\n          </div>\n        </el-form-item>\n        <el-form-item label=\"选项类型\" :label-width=\"formLabelWidth\">\n          <div class=\"inputGroup\">\n            <el-select v-model=\"quesForm.optionsType\" placeholder=\"请选择\">\n              <el-option v-for=\"item in options\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\"></el-option>\n            </el-select>\n          </div>\n        </el-form-item>\n        <el-form-item label=\"问题选项\" :label-width=\"formLabelWidth\">\n          <div v-for=\"(item, index) in quesOptions\" :key=\"index\" class=\"inputGroup\" style=\"margin: 14px 0px;\">\n            <input v-model=\"item.label\" type=\"text\" required=\"\" autocomplete=\"off\">\n          </div>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button class=\"el-button--goon\" @click=\"dialogVisible = false\">取 消</el-button>\n        <el-button class=\"el-button--goon\" type=\"primary\" @click=\"addQuestion()\">确 定</el-button>\n      </span>\n    </el-dialog>\n\n    <el-dialog title=\"修改问题\" :close-on-click-modal=\"false\" :visible.sync=\"dialogVisibleUpdate\" width=\"30%\" style=\"color:aquamarine;\">\n      <el-form :model=\"updateForm\">\n        <el-form-item label=\"主题\" :label-width=\"formLabelWidth\">\n          <div class=\"inputGroup\">\n            <input v-model=\"updateForm.theme\" type=\"text\" required=\"\" autocomplete=\"off\">\n          </div>\n        </el-form-item>\n        <el-form-item label=\"驱动因素\" :label-width=\"formLabelWidth\">\n          <div class=\"inputGroup\">\n            <input v-model=\"updateForm.themeModule\" type=\"text\" required=\"\" autocomplete=\"off\">\n          </div>\n        </el-form-item>\n        <el-form-item label=\"子因素\" :label-width=\"formLabelWidth\">\n          <div class=\"inputGroup\">\n            <input v-model=\"updateForm.tags\" type=\"text\" required=\"\" autocomplete=\"off\">\n          </div>\n        </el-form-item>\n        <el-form-item label=\"问题描述\" :label-width=\"formLabelWidth\">\n          <div class=\"inputGroup\">\n            <input v-model=\"updateForm.description\" type=\"text\" required=\"\" autocomplete=\"off\">\n          </div>\n        </el-form-item>\n        <el-form-item label=\"选项类型\" :label-width=\"formLabelWidth\">\n          <div class=\"inputGroup\">\n            <el-select v-model=\"updateForm.optionsType\" placeholder=\"请选择\">\n              <el-option v-for=\"item in options\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\"></el-option>\n            </el-select>\n          </div>\n        </el-form-item>\n        <el-form-item label=\"问题选项\" :label-width=\"formLabelWidth\">\n          <div v-for=\"(item, index) in quesOptions\" :key=\"index\" class=\"inputGroup\" style=\"margin: 14px 0px;\">\n            <input v-model=\"item.label\" type=\"text\" required=\"\" autocomplete=\"off\">\n          </div>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button class=\"el-button--goon\" @click=\"dialogVisibleUpdate = false\">取 消</el-button>\n        <el-button class=\"el-button--goon\" type=\"primary\" @click=\"updateQuestion()\">确 定</el-button>\n      </span>\n    </el-dialog>\n\n    <el-dialog title=\"删除问题\" :close-on-click-modal=\"false\" :visible.sync=\"dialogVisibleDelete\" width=\"30%\" style=\"color:aquamarine;\">\n      <p>确定要删除问题：<br>《{{ deleteDes }}》吗？</p>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button class=\"el-button--goon\" @click=\"dialogVisibleDelete = false\">取 消</el-button>\n        <el-button class=\"el-button--goon\" type=\"primary\" @click=\"deleteQuestion()\">确 定</el-button>\n      </span>\n    </el-dialog>\n\n    <div class=\"block\">\n      <el-pagination @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\" :current-page=\"currentPage\" :page-sizes=\"[10, 5, 15, 20, 25, 30]\"\n        :page-size=\"pageSize\"\n        layout=\"total, sizes, prev, pager, next, jumper\"\n        :total=\"total\">\n      </el-pagination>\n    </div>\n\n  </div>\n</template>\n\n<script>\nimport quesApi from '@/api/questions'\n\nexport default {\n  data() {\n    return {\n      tableData:[],\n      innerHeight: window.innerHeight,\n      dialogVisible: false,\n      dialogVisibleUpdate: false,\n      dialogVisibleDelete: false,\n      formLabelWidth: '87px',\n      quesForm: {},\n      updateForm: {},\n      deleteDes: '',\n      deleteId: 0,\n      options: [\n        {\n          value: 0,\n          label: '单选'\n        },\n        {\n          value: 1,\n          label: '多选'\n        }\n      ],\n      quesOptions: [\n        {\n          sort: 1,\n          value: 1,\n          label: '完全同意'\n        },\n        {\n          sort: 2,\n          value: 2,\n          label: '同意'\n        },\n        {\n          sort: 3,\n          value: 3,\n          label: '基本同意'\n        },\n        {\n          sort: 4,\n          value: 4,\n          label: '不同意'\n        },\n        {\n          sort: 5,\n          value: 5,\n          label: '完全不同意'\n        }\n      ],\n      formQuery: {},\n      total: 0,\n      currentPage: 1,\n      pageSize: 10\n    }\n  },\n  created() {\n    this.getform(1,10)\n  },\n  methods: {\n    toAddQuestion() {\n      this.dialogVisible = true\n      this.quesForm = {}\n    },\n    toUpdateQuestion(index, row) {\n      this.dialogVisibleUpdate = true\n      this.updateForm = row\n    },\n    toDeleteQuestion(index, row) {\n      this.dialogVisibleDelete = true\n      this.deleteDes = row.description\n      this.deleteId = row.id\n    },\n    deleteQuestion() {\n      quesApi.deleteQuestion(this.deleteId).then(res => {\n        if(res.data.code === 200) {\n          this.$message({\n            type: 'success',\n            message: '删除成功'\n          })\n        }\n        this.getform(1,10)\n        this.dialogVisibleDelete = false\n      })\n    },\n    addQuestion() {\n      this.quesForm.options = JSON.stringify(this.quesOptions)\n      // console.log(options)\n      quesApi.addQuestion(this.quesForm).then(res => {\n        if(res.data.code === 200) {\n          this.$message({\n            type: 'success',\n            message: '添加成功'\n          })\n        }\n        this.getform(1,10)\n        this.dialogVisible = false\n      })\n    },\n    updateQuestion() {\n      this.updateForm.options = JSON.stringify(this.quesOptions)\n      quesApi.updateQuestion(this.updateForm).then(res => {\n        if(res.data.code === 200) {\n          this.$message({\n            type: 'success',\n            message: '添加成功'\n          })\n        }\n        this.getform(1,10)\n        this.dialogVisibleUpdate = false\n      })\n    },\n    getform(current, limit) {\n      quesApi.getFormDataListPage(current, limit, this.formQuery).then(res => {\n        if(res.data.code === 200){\n          this.tableData = res.data.data.rows\n          this.total = res.data.data.total\n        }\n      })\n    },\n    // 切换为xx条一页\n    handleSizeChange(val) {\n      this.getform(1,val)\n      this.pageSize = val\n    },\n    // 去到xx页\n    handleCurrentChange(val) {\n      this.getform(val,this.pageSize)\n      this.currentPage = val\n    }\n  }\n}\n</script>\n\n<style scoped>\n.body {\n  margin: 7px;\n}\n\n\n  /* 按钮风格重定义 */\n.el-button--goon {\n  color: #ffffff;\n  background-color: #13c2c2;\n  border-color: #13c2c2;\n  height: 34px;\n  line-height: 34px;\n  padding: 0 20px;\n}\n.el-button--goon:focus, .el-button--goon:hover {\n  color: rgb(245, 245, 245);\n  background-color: #0e9a9a;\n  border-color: #0e9a9a;\n  height: 34px;\n  line-height: 34px;\n  padding: 0 20px;\n}\n.el-button--goon:active {\n  color:  #ffffff;\n  background-color: #13c2c2;\n  border-color: #13c2c2;\n  height: 34px;\n  line-height: 34px;\n  padding: 0 20px;\n}\n/* 按钮风格重定义 */\n\n.inputGroup {\n  font-family: 'Segoe UI', sans-serif;\n  margin: 0em 0 0em 0;\n  max-width: 297px;\n  position: relative;\n}\n\n.inputGroup input {\n  font-size: 100%;\n  padding: 0.8em;\n  outline: none;\n  border: 2px solid rgb(200, 200, 200);\n  background-color: transparent;\n  border-radius: 7px;\n  width: 100%;\n}\n\n.inputGroup :is(input:focus, input:valid)~label {\n  transform: translateY(-50%) scale(.9);\n  margin: 0em;\n  margin-left: 1.3em;\n  padding: 0.4em;\n  background-color: #e8e8e8;\n}\n\n.inputGroup :is(input:focus, input:valid) {\n  border-color: lightseagreen;\n}\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}